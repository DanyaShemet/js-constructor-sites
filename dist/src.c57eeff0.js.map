{"version":3,"sources":["utils.js","classes/blocks.js","model.js","classes/site.js","classes/sidebar.js","classes/app.js","index.js"],"names":["row","content","styles","col","css","Object","keys","map","key","join","block","type","Block","value","options","Error","TitleBlock","tag","TextBlock","ColumnsBlock","html","ImageBlock","is","imageStyles","alt","model","color","padding","image","width","height","background","Site","selector","$el","document","querySelector","innerHTML","forEach","insertAdjacentHTML","toHTML","Sidebar","updateCallback","update","init","template","addEventListener","add","bind","event","preventDefault","target","name","newBlock","App","site","render","push"],"mappings":"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","file":"src.c57eeff0.js","sourceRoot":"..\\src","sourcesContent":["export function row(content, styles = ''){\r\n    return `<div class=\"row\" style=\"${styles}\">${content}</div>`\r\n}\r\n\r\nexport function col(content){\r\n    return `<div class=\"col-sm\">${content}</div>`\r\n}\r\n\r\nexport function css(styles = {}){\r\n    if (typeof styles === \"string\") return styles\r\n    const toString = key => `${key}: ${styles[key]}`\r\n    return Object.keys(styles).map(toString).join(';')\r\n}\r\n\r\nexport function block(type) {\r\n    return `\r\n    <form name=\"${type}\">\r\n      <h5>${type}</h5>\r\n      <div class=\"form-group\">\r\n        <input class=\"form-control form-control-sm\" name=\"value\" placeholder=\"value\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input class=\"form-control form-control-sm\" name=\"styles\" placeholder=\"styles\">\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary btn-sm\">Добавить</button>\r\n    </form>\r\n    <hr />\r\n  `\r\n}","import {col, css, row} from \"../utils\";\r\n\r\nclass Block {\r\n    constructor(value, options) {\r\n        this.value = value\r\n        this.options = options\r\n    }\r\n\r\n    toHTML() {\r\n        throw new Error('Метод toHTML должен быть реализован')\r\n    }\r\n\r\n}\r\n\r\nexport class TitleBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options)\r\n    }\r\n\r\n    toHTML() {\r\n        const {tag = 'h1', styles} = this.options\r\n        return row(col(`<${tag}>${this.value}</${tag}>`), css(styles))\r\n    }\r\n}\r\n\r\nexport class TextBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options)\r\n    }\r\n\r\n    toHTML() {\r\n        const {styles = {}} = this.options\r\n        return row(col(`<p>${this.value}</p>`), css(styles))\r\n    }\r\n}\r\n\r\nexport class ColumnsBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options)\r\n    }\r\n\r\n    toHTML() {\r\n        const {styles = {}} = this.options\r\n        const html = this.value.map(col).join('')\r\n        return row(html, css(styles))\r\n    }\r\n}\r\n\r\nexport class ImageBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options)\r\n    }\r\n\r\n    toHTML() {\r\n        const {styles = {}, imageStyles: is, alt = ''} = this.options\r\n        return row(col(`<img src=\"${this.value}\" alt=\"${alt}>\" style=\"${css(is)}\"`), css(styles))\r\n    }\r\n}","import image from './assets/img/image.png'\r\nimport {TitleBlock, TextBlock, ImageBlock, ColumnsBlock} from './classes/blocks'\r\n\r\nexport const model = [\r\n    new TitleBlock('Конструктор сайтов на чистом JS', {\r\n        tag: 'h2',\r\n        styles: {\r\n            color: 'red',\r\n            padding: '1.5rem',\r\n            'text-align': 'center',\r\n        }\r\n    }),\r\n\r\n    new ImageBlock( image, {\r\n        styles: {\r\n            padding: '2rem 0',\r\n            'text-align': 'center',\r\n        },\r\n        imageStyles: {\r\n            width: '500px',\r\n            height: 'auto'\r\n        },\r\n        alt: 'Картинка'\r\n    }),\r\n    new ColumnsBlock( [\r\n        '11111', '22222', '33333'\r\n    ], {\r\n        styles: {\r\n            background: 'linear-gradient(to bottom, #8e2de2, #4a00e0)',\r\n            padding: '2rem',\r\n            color: '#fff',\r\n            'font-weight': 'bold'\r\n        }\r\n    }),\r\n    new TextBlock( 'here we go with text', {\r\n        styles: {\r\n            background: 'linear-gradient(to left, #f2994a, #f2c94c)',\r\n            padding: '1rem',\r\n            'font-weight': 'bold'\r\n        }\r\n    })\r\n]","\r\nexport class Site{\r\n    constructor(selector) {\r\n        this.$el = document.querySelector(selector)\r\n    }\r\n    render(model){\r\n        this.$el.innerHTML = ''\r\n        model.forEach(block => {\r\n            this.$el.insertAdjacentHTML('beforeend', block.toHTML())\r\n        })\r\n    }\r\n}","import {block} from \"../utils\";\r\nimport {TextBlock, TitleBlock} from \"./blocks\";\r\n\r\nexport class Sidebar{\r\n    constructor(selector, updateCallback) {\r\n        this.$el = document.querySelector(selector)\r\n        this.update = updateCallback\r\n        this.init()\r\n    }\r\n\r\n    init(){\r\n        this.$el.insertAdjacentHTML('afterbegin', this.template)\r\n        this.$el.addEventListener('submit', this.add.bind(this))\r\n    }\r\n\r\n    get template(){\r\n        return [\r\n            block('text'),\r\n            block('title'),\r\n        ].join('')\r\n    }\r\n    add(event){\r\n        event.preventDefault()\r\n        const type = event.target.name\r\n        const value = event.target.value.value\r\n        const styles = event.target.styles.value\r\n\r\n        const newBlock = type === 'text'\r\n            ? new TextBlock(value, {styles})\r\n            : new TitleBlock(value, {styles})\r\n        this.update(newBlock)\r\n\r\n        event.target.value.value = ''\r\n        event.target.styles.value = ''\r\n    }\r\n\r\n}\r\n\r\n","import {Site} from \"./site\";\r\nimport {Sidebar} from \"./sidebar\";\r\n\r\nexport class App {\r\n    constructor(model) {\r\n        this.model = model\r\n    }\r\n\r\n    init() {\r\n        const site = new Site('#site')\r\n        site.render(this.model)\r\n        const updateCallback = newBlock => {\r\n            this.model.push(newBlock)\r\n            site.render(this.model)\r\n        }\r\n        new Sidebar('#panel', updateCallback)\r\n    }\r\n}","import {model} from \"./model\";\r\nimport './css/index.css'\r\nimport {App} from \"./classes/app\";\r\n\r\n\r\nnew App(model).init()"]}